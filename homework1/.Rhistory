q()
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("randomForest")
t<-proc.time
t
before<-proc.time()
before
data_conversion<-function(samp){
for (n in names(samp)){
col<-samp[,n]
na<-is.na(col)
if (any(na)){
if (is.numeric(col)){
print(paste("*",n))
samp[,paste(n,"NA",sep="_")]<-na
samp[na,n]<-median(col,na.rm=T)
}else{
print(paste(".",n))
samp[na,n] <-'*#NA,#'
}
}
if (nlevels(col)>32){
print(paste("32",n))
samp[,n]<-unclass(col)
}
dt<-strptime(col,"%m/%d/%Y")
if(!any(is.na(dt)))
{
print(paste("!",n))
samp[,n] = as.double(dt)
samp[,paste(n,"wday",sep="_")]=dt$wday
}
}
return(samp)
}
#Reading data
setwd("/home/ykatada/Rwork/Jeremy_Lec")
train<-read.csv("Train.csv")
#Get the starting time
before<-proc.time()
#Sampling
idx<-sample(1:dim(train)[1],dim(train)[1]*0.25)
samp<-train[idx,]
samp<-data_conversion(samp)
#randomforest
library(randomForest)
#Setting
idx_y<-2
ntree<-50
colIdx<-NULL
max_rsq<-NULL
counter<-0
#Feature Selection
repeat{
tmp_rsq<-NULL
for(i in 1:dim(samp)[2]){
if(sum(c(idx_y,colIdx)==i)==0){
tmp_rf<-randomForest(SalePrice~.,data=samp[,c(idx_y,colIdx,i)],ntree=ntree,maxnodes=3)
tmp_rsq<-c(tmp_rsq,tmp_rf$rsq[ntree])
}else{tmp_rsq<-c(tmp_rsq,-9999)}
}
cat(colnames(samp)[which(tmp_rsq==max(tmp_rsq))],"\n")
cat(max(tmp_rsq),"\n")
counter<-counter+1
if(counter==1){
max_rsq<-c(max_rsq,max(tmp_rsq))
colIdx<-c(colIdx,which(tmp_rsq==max(tmp_rsq)))
}
else{
if(max(tmp_rsq)>max_rsq[length(max_rsq)]){
max_rsq<-c(max_rsq,max(tmp_rsq))
colIdx<-c(colIdx,which(tmp_rsq==max(tmp_rsq)))
}else{
#After Feature Selection, execute RF for all training data set
final_rf<-randomForest(SalePrice~.,data=samp[,c(idx_y,colIdx)],ntree=300)
break
}
}
}
#Output
indVar<-paste(colnames(train[,colIdx]),sep=" ")
cat("Independent variables:",indVar)
final_rf
plot(final_rf)
exeTime<-proc.time()-before
cat("Elapsed Time",exeTime[3]/60)
before<-proc.time()
#Sampling
idx<-sample(1:dim(train)[1],dim(train)[1]*0.25)
samp<-train[idx,]
samp<-data_conversion(samp)
#randomforest
library(randomForest)
#Setting
idx_y<-2
ntree<-25
colIdx<-NULL
max_rsq<-NULL
counter<-0
#Feature Selection
repeat{
tmp_rsq<-NULL
for(i in 1:dim(samp)[2]){
if(sum(c(idx_y,colIdx)==i)==0){
tmp_rf<-randomForest(SalePrice~.,data=samp[,c(idx_y,colIdx,i)],ntree=ntree,maxnodes=3)
tmp_rsq<-c(tmp_rsq,tmp_rf$rsq[ntree])
}else{tmp_rsq<-c(tmp_rsq,-9999)}
}
cat(colnames(samp)[which(tmp_rsq==max(tmp_rsq))],"\n")
cat(max(tmp_rsq),"\n")
counter<-counter+1
if(counter==1){
max_rsq<-c(max_rsq,max(tmp_rsq))
colIdx<-c(colIdx,which(tmp_rsq==max(tmp_rsq)))
}
else{
if(max(tmp_rsq)>max_rsq[length(max_rsq)]){
max_rsq<-c(max_rsq,max(tmp_rsq))
colIdx<-c(colIdx,which(tmp_rsq==max(tmp_rsq)))
}else{
#After Feature Selection, execute RF for all training data set
final_rf<-randomForest(SalePrice~.,data=samp[,c(idx_y,colIdx)],ntree=300)
break
}
}
}
#Output
indVar<-paste(colnames(train[,colIdx]),sep=" ")
cat("Independent variables:",indVar)
final_rf
plot(final_rf)
exeTime<-proc.time()-before
cat("Elapsed Time",exeTime[3]/60)
library(ggplot2)
data(movies)
data(EuStockMarkets)
movies[1,]
summary(movies)
subset(movies, budget>0)
movies1<-subset(movies, budget>0)
genre <- rep(NA, nrow(movies1))
count <- rowSums(movies1[, 18:24])
genre[which(count > 1)] = "Mixed"
genre[which(count < 1)] = "None"
genre[which(count == 1 & movies1$Action == 1)] = "Action"
genre[which(count == 1 & movies1$Animation == 1)] = "Animation"
genre[which(count == 1 & movies1$Comedy == 1)] = "Comedy"
genre[which(count == 1 & movies1$Drama == 1)] = "Drama"
genre[which(count == 1 & movies1$Documentary == 1)] = "Documentary"
genre[which(count == 1 & movies1$Romance == 1)] = "Romance"
genre[which(count == 1 & movies1$Short == 1)] = "Short"
movies1[1,]
eu <- transform(data.frame(EuStockMarkets), time = time(EuStockMarkets))
ggplot(movies1)+geom_point(aes(x=budget,y=rating))
movies[1,]
genre
movies1$genre<-genre
movies1[1,]
ggplot(movies1)+geom_point(aes(x=budget,y=rating),col=as.factor(genre))
ggplot(movies1)+geom_point(aes(x=budget,y=rating,col=factor(genre)))
ggplot(movies1)+geom_point(aes(x=budget,y=rating))+
labs(title = "Budget and Rating", x = "budget", y = "rating")
ggplot(movies1)+geom_point(aes(x=budget,y=rating,col=factor(genre)))+facet_wrap(~genre)
labs(title = "Budget and Rating", x = "budget", y = "rating")
p2<-ggplot(movies1)+geom_point(aes(x=budget,y=rating,col=factor(genre)))+facet_wrap(~genre,ncol=3)
labs(title = "Budget and Rating", x = "budget", y = "rating")
movies1$genre<-as.factor(genre)
p2<-ggplot(movies1)+geom_point(aes(x=budget,y=rating,col=genre))+facet_wrap(~genre,ncol=3)
labs(title = "Budget and Rating", x = "budget", y = "rating")
p2
movies<-subset(movies, budget>0)
genre <- rep(NA, nrow(movies))
count <- rowSums(movies[, 18:24])
genre[which(count > 1)] = "Mixed"
genre[which(count < 1)] = "None"
genre[which(count == 1 & movies$Action == 1)] = "Action"
genre[which(count == 1 & movies$Animation == 1)] = "Animation"
genre[which(count == 1 & movies$Comedy == 1)] = "Comedy"
genre[which(count == 1 & movies$Drama == 1)] = "Drama"
genre[which(count == 1 & movies$Documentary == 1)] = "Documentary"
genre[which(count == 1 & movies$Romance == 1)] = "Romance"
genre[which(count == 1 & movies$Short == 1)] = "Short"
movies$genre<-as.factor(genre)
ggplot(movies)+geom_bar(aes(x=genre),stat="identity")
ggplot(movies)+geom_bar(aes(x=genre))
ggplot(movies)+geom_bar(aes(x=genre),fill="red")
ggplot(movies)+geom_bar(aes(x=genre),fill="#00000")
ggplot(movies)+geom_bar(aes(x=genre),fill="FF9933")
ggplot(movies)+geom_bar(aes(x=genre),fill="#FF9933")
ggplot(movies)+geom_bar(aes(x=genre),fill="#004C99")+
ggplot(movies)+geom_bar(aes(x=genre),fill="#004C99")
th<-theme(plot.title = element_text(size=18),
axis.title.x = element_text(size=15),
axis.title.y = element_text(size=15),
legend.title = element_text(size=15),
legend.text = element_text(size=15))
p1<-ggplot(movies)+geom_point(aes(x=budget,y=rating))+
labs(title = "Budget and Rating", x = "budget", y = "rating") +th
p1
p2<-ggplot(movies)+geom_point(aes(x=budget,y=rating,col=genre))+facet_wrap(~genre,ncol=3)
labs(title = "Budget and Rating", x = "budget", y = "rating")+th
p2
p2<-ggplot(movies)+geom_point(aes(x=budget,y=rating,col=genre))+facet_wrap(~genre,ncol=3)+th
p2
ggplot(movies)+geom_bar(aes(x=genre),fill="#004C99")+
labs(title = "Count of Genre", x = "Genre", y = "Count")+th
ggplot(movies)+geom_bar(aes(x=genre),fill="#004C99")+
labs(title = "Count of Genre", x = "Genre", y = "Count")+th+coord_flip()
ggplot(movies)+geom_bar(aes(x=genre),fill="#004C99")+
labs(title = "Count of Genre", x = "Genre", y = "Count")+coord_flip()+th+theme(axis.y.text=element_text(size=15))
ggplot(movies)+geom_bar(aes(x=genre),fill="#004C99")+
labs(title = "Count of Genre", x = "Genre", y = "Count")+coord_flip()+th+theme(axis.text.y=element_text(size=15))
th<-theme(plot.title = element_text(size=18),
axis.title.x = element_text(size=15),
axis.title.y = element_text(size=15),
axis.text.y=element_text(size=15),
axis.text.x=element_text(size=15),
legend.title = element_text(size=15),
legend.text = element_text(size=15))
p1<-ggplot(movies)+geom_point(aes(x=budget,y=rating))+
labs(title = "Budget and Rating", x = "budget", y = "rating") +th
p1
p2<-ggplot(movies)+geom_point(aes(x=budget,y=rating,col=genre))+facet_wrap(~genre,ncol=3)+th
p2
p2<-ggplot(movies)+geom_point(aes(x=budget,y=rating,col=genre))+facet_wrap(~genre,ncol=3)
p2
ggplot(movies)+geom_bar(aes(x=genre),fill="#004C99")+
labs(title = "Count of Genre", x = "Genre", y = "Count")+coord_flip()+th
p3<-ggplot(movies)+geom_point(aes(x=budget,y=rating,col=genre))+facet_wrap(~genre,ncol=3)
p2
p3
eu[1,]
p4<-ggplot(eu,aes(x=time,y=DAX))+geom_line()+geom_line(aes(x=time,y=SMI))
p4
p4<-ggplot(eu)+geom_line(aes(x=time,y=DAX))+geom_line(aes(x=time,y=SMI))
p4
p4<-ggplot(eu)+geom_line(aes(x=time,y=DAX,col=1))+
geom_line(aes(x=time,y=SMI,col=2))+
geom_line(aes(x=time,y=CAC,col=3))+
geom_line(aes(x=time,y=FTSE,col=4))
p4
library(reshape2)
melt(ec)
melt(eu)
melt(eu)[1,]
eu2<-melt(eu)
eu2[1,]
eu[1,]
table(eu2[,1])
eu[,5]*4
time<-rep(eu[,5],4)
time
cbind(eu2,time)
eu2<-melt(eu[,1:4])
time<-rep(eu[,5],4)
cbind(eu2,time)
eu2<-as.data.frame(cbind(eu2,time))
eu2[1,]
?EuStockMarkets
colnames(eu2)<-c("Stock Index","Price","Time")
eu2<-melt(eu[,1:4])
time<-rep(eu[,5],4)
eu2<-as.data.frame(cbind(eu2,time))
colnames(eu2)<-c("Index","Price","Time")
eu2$Index<-as.factor(eu2$Index)
p4<-ggplot(eu2)+geom_line(aes(x=Time,y=Index,col=Index))
p4
p4<-ggplot(eu2)+geom_line(aes(x=Time,y=Price,col=Index))
p4
p4<-ggplot(eu2)+geom_line(aes(x=Time,y=Price,col=Index))+th
p4
eu2<-melt(eu[,1:4])
time<-rep(eu[,5],4)
eu2<-as.data.frame(cbind(eu2,time))
colnames(eu2)<-c("Index","Price","Time")
eu2$Index<-as.factor(eu2$Index)
p4<-ggplot(eu2)+geom_line(aes(x=Time,y=Price,col=Index))+
labs(title = "European Stock Indicies Trend", x = "Time", y = "Price")+th
p4
library(reshape2)
eu2<-melt(eu[,1:4])
p3<-ggplot(movies)+geom_point(aes(x=budget,y=rating,col=genre))+facet_wrap(~genre,ncol=3)+
theme(legend.title = element_text(size=15),
legend.text = element_text(size=15))
p3
p3<-ggplot(movies)+geom_point(aes(x=budget,y=rating,col=genre))+facet_wrap(~genre,ncol=3)+
theme(axis.title.x = element_text(size=15),
axis.title.y = element_text(size=15),
legend.title = element_text(size=15),
legend.text = element_text(size=15))
p3
ggsave(file = "hw1-multilines.png", plot = p4,dpi = 100, width = 6.4, height = 4.8)
getwd()
setwd("/home/ykatada/MSAN622/homework1")
setwd("/home/ykatada/Rwork/MSAN622/homework1")
ggsave(file = "hw1-multilines.png", plot = p4,dpi = 100, width = 10, height = 6)
p1<-ggplot(movies)+geom_point(aes(x=budget,y=rating))+
labs(title = "Budget and Rating", x = "budget", y = "rating") +th
ggsave(file = "hw1-scatter.png", plot = p1, dpi = 100, width = 10, height = 6)
#Plot2: Bar Chart
p2<-ggplot(movies)+geom_bar(aes(x=genre),fill="#004C99")+
labs(title = "Count of Genre", x = "Genre", y = "Count")+coord_flip()+th
ggsave(file = "hw1-bar.png", plot = p2, dpi = 100, width = 10, height = 6)
#Plot3: Small Multiples
p3<-ggplot(movies)+geom_point(aes(x=budget,y=rating,col=genre))+facet_wrap(~genre,ncol=3)+
theme(axis.title.x = element_text(size=15),
axis.title.y = element_text(size=15),
legend.title = element_text(size=15),
legend.text = element_text(size=15))
ggsave(file = "hw1-multiples.png", plot = p3, dpi = 100, width = 10, height = 6)
#Plot 4: Multi-Line Chart
#First of all, transform dataset for easily creating multi-line chart by melt function
library(reshape2)
eu2<-melt(eu[,1:4])
time<-rep(eu[,5],4)
eu2<-as.data.frame(cbind(eu2,time))
#Change the column name
colnames(eu2)<-c("Index","Price","Time")
#Finally, ggplot!
eu2$Index<-as.factor(eu2$Index)
p4<-ggplot(eu2)+geom_line(aes(x=Time,y=Price,col=Index))+
labs(title = "European Stock Indicies Trend", x = "Time", y = "Price")+th
ggsave(file = "hw1-multilines.png", plot = p4, dpi = 100, width = 10, height = 6)
