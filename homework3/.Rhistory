library(ggplot2)
data(movies)
data(EuStockMarkets)
library(reshape2)
eu2<-melt(eu[,1:4])
time<-rep(eu[,5],4)
eu <- transform(data.frame(EuStockMarkets), time = time(EuStockMarkets))
(1/2 +1/sqrt(5))^(1/2)
-(1/sqrt(2))*(1-2/sqrt(5))^(1/2)
x<-c(2,0,0,0,4,0,0,0,4)
x<-matrix(c(2,0,0,0,4,0,0,0,4),ncol=3)
x
eigen(x)
x<-matrix(c(1,0,0,0,1,0,0,0,1),ncol=3)
eigen(x)
x<-matrix(c(4,0,0,0,3,0,0,0,2),ncol=3)
eigen(x)
x<-matrix(c(10005.2,255.76,255.76,14.3),ncol=2)
x
eigen(x)
-0.99967293^2+-0.02557417^2
10011.742991 /(tr(x))
10011.742991 /(trace(x))
10011.742991 /trace(x)
10011.742991 /(10005.20+14.30)
255.76/(sqrt(10005.2)*sqrt(255.76))
0.9997*sqrt(10011.74)/sqrt(10005.2)
0.9997*sqrt(10011.742991)/sqrt(10005.2)
-0.99967293*sqrt(10011.742991)/sqrt(10005.2)
library(shiny)
shiny::runGitHub('msan622', 'yosukekatada', subdir='homework2')
library(shiny)
shiny::runGitHub('msan622', 'yosukekatada', subdir='homework2')
data(state.x77)
library(datasets)
data(state.x77)
state.x77
library(ggplot2)
df <- data.frame(state.x77,
State = state.name,
Abbrev = state.abb,
Region = state.region,
Division = state.division)
df[1,]
plotmatrix(df[,1:8])
?ggpairs
library(grid)
p<-ggplot(df)+geom_point(aes(x=Income, y =Life.Exp, size = Population))
p
p<-ggplot(df)+geom_point(aes(x=Income, y =Life.Exp, size = Population/100))
p
p<-ggplot(df)+geom_point(aes(x=Income, y =Life.Exp, size = Population))
p
p<-ggplot(df)+geom_point(aes(x=Income, y =Life.Exp, fill= Region, size = Population))
p
p<-ggplot(df)+geom_point(aes(x=Income, y =Life.Exp, fill= as.factor(Region), size = Population))
p
p<-ggplot(df)+geom_point(aes(x=Income, y =Life.Exp, fill= as.factor(Region)+1, size = Population))
p
df$Region <- as.factor(df$Region)
p<-ggplot(df)+geom_point(aes(x=Income, y =Life.Exp, fill= Region, size = Population))
p
p<-ggplot(df)+geom_point(aes(x=Income, y =Life.Exp, color= Region, size = Population))
p
p<-ggplot(df)+geom_point(aes(x=Income, y =Life.Exp, color= Region, size = Population),alpha=0.6, position="jitter")
p
p<-ggplot(df)+geom_point(aes(x=Income, y =Life.Exp, color= Region, size = Population),alpha=0.6, position="jitter")
p<-p+scale_size_area(max=10)
p<-ggplot(df)+geom_point(aes(x=Income, y =Life.Exp, color= Region, size = Population),alpha=0.6, position="jitter")
p<-p+scale_size_area(max_size==10)
p<-ggplot(df)+geom_point(aes(x=Income, y =Life.Exp, color= Region, size = Population),alpha=0.6, position="jitter")
p<-p+scale_size_area(max_size=10)
p
p<-ggplot(df)+geom_point(aes(x=Income, y =Life.Exp, color= Region, size = Population),alpha=0.6, position="jitter")
p<-p+scale_size_area(max_size=20)
p
df<-df[order(df$Population,decreasing=TRUE),]
p<-ggplot(df)+geom_point(aes(x=Income, y =Life.Exp, color= Region, size = Population),alpha=0.6, position="jitter")
p<-p+scale_size_area(max_size=20)
p
p<-ggplot(df)+geom_point(aes(x=Income, y =Life.Exp, color= Region, size = Population),alpha=1, position="jitter")
p<-p+scale_size_area(max_size=20)
p
ggpairs(df[,1:8])
install.packages("GGally")
library(GGalery)
library(GGally)
ggpairs(df[,1:8])
p<-p+annotate("text",x=10,y= 20, label = "Circle is the size of Population")
p
p<-ggplot(df)+geom_point(aes(x=Income, y =Life.Exp, color= Region, size = Population),alpha=1, position="jitter")
p<-p+scale_size_area(max_size=20)
p<-p+annotate("text",x=1000,y= 70, label = "Circle is the size of Population")
p
p<-p+guides(color=guide_legend(override.aes = list(size=8)))
p
p<-ggplot(df)+geom_point(aes(x=Income, y =Life.Exp, color= Region, size = Population),alpha=1, position="jitter")
p<-p+scale_size_area(max_size=20, guide="none")
p<-p+guides(color=guide_legend(override.aes = list(size=8)))
p<-p+annotate("text",x=1000,y= 70, label = "Circle is the size of Population")
p
df<-df[order(df$Population,decreasing=TRUE),]
p<-ggplot(df)+geom_point(aes(x=Income, y =Life.Exp, color= Region, size = Population),alpha=1, position="jitter")
p<-p+scale_size_area(max_size=20, guide="none")
p<-p+guides(color=guide_legend(override.aes = list(size=8)))
p<-p+annotate("text",x=4000,y= 80, label = "Circle is the size of Population")
p
df<-df[order(df$Population,decreasing=TRUE),]
p<-ggplot(df)+geom_point(aes(x=Income, y =Life.Exp, color= Region, size = Population),alpha=1, position="jitter")
p<-p+scale_size_area(max_size=20, guide="none")
p<-p+guides(color=guide_legend(override.aes = list(size=8)))
p<-p+annotate("text",x=(max(Income)-min(Income))/2,y= 70, label = "Circle is the size of Population")
p<-p+annotate("text",x=(max(df$Income)-min(df$Income))/2,y= 70, label = "Circle is the size of Population")
p
df<-df[order(df$Population,decreasing=TRUE),]
p<-ggplot(df)+geom_point(aes(x=Income, y =Life.Exp, color= Region, size = Population),alpha=1, position="jitter")
p<-p+scale_size_area(max_size=20, guide="none")
p<-p+guides(color=guide_legend(override.aes = list(size=8)))
p<-p+annotate("text",x=(max(df$Income)+min(df$Income))/2,y= 70, label = "Circle is the size of Population")
p
df<-df[order(df$Population,decreasing=TRUE),]
p<-ggplot(df)+geom_point(aes(x=Income, y =Life.Exp, color= Region, size = Population),alpha=1, position="jitter")
p<-p+scale_size_area(max_size=20, guide="none")
p<-p+guides(color=guide_legend(override.aes = list(size=8)))
p<-p+annotate("text",x=(max(df$Income)+min(df$Income))/2,y= max(df$Life.Exp)-1, label = "Circle is the size of Population")
p
df<-df[order(df$Population,decreasing=TRUE),]
p<-ggplot(df)+geom_point(aes(x=Income, y =Life.Exp, color= Region, size = Population),alpha=1, position="jitter")
p<-p+scale_size_area(max_size=20, guide="none")
p<-p+guides(color=guide_legend(override.aes = list(size=8)))
p<-p+annotate("text",x=(max(df$Income)+min(df$Income))/2,y= max(df$Life.Exp)+1, label = "Circle is the size of Population")
p
library(reshape2)
melt(df)
df_m<-melt(df)
df_m2<-subset(df_m,variable=='Income')
p<-ggplot(df_m2)+geom_tile(aes(x=Abbrev,y=Region,fill=Income))
p
df_m2
p<-ggplot(df_m2)+geom_tile(aes(x=Abbrev,y=Region,fill=value))
p
library(reshape)
?gsub
gsub("\\."," ", colnames(df))
sapply(df, is.numeric)
processData<-function(dat){
dat2<-dat
colnames(dat2)<-gsub("\\."," ", colnames(dat2))
dat2<-dat2[sapply(dat2, is.numeric)]
dat2<-rescaler(dat2,type="range")
dat2$id<-1:nrow(dat)
dat2<-melt(dat2,"id")
dat2$id<-factor(dat2$id, levels=1:nrow(original),ordered=TRUE)
return(dat2)
}
processData(iris)
processData<-function(dat){
dat2<-dat
colnames(dat2)<-gsub("\\."," ", colnames(dat2))
dat2<-dat2[sapply(dat2, is.numeric)]
dat2<-rescaler(dat2,type="range")
dat2$id<-1:nrow(dat)
dat2<-melt(dat2,"id")
dat2$id<-factor(dat2$id, levels=1:nrow(dat),ordered=TRUE)
return(dat2)
}
processData(iris)
processData(df)
dat<-df
dat2<-dat
colnames(dat2)<-gsub("\\."," ", colnames(dat2))
dat2[1,]
dat2<-dat2[sapply(dat2, is.numeric)]
dat2[1,]
dat2<-rescaler(dat2,type="range")
dat2[1,]
dat2$id<-1:nrow(dat)
dat2[1,]
dat2<-melt(dat2,"id")
dat2[1,]
dat2$id<-factor(dat2$id, levels=1:nrow(dat),ordered=TRUE)
dat2
df2<-processData(df)
p<-ggplot(df2)+geom_tile(aes(x=id,y=variable,fill=value))
p
levels(df2$variable)
pallet<-c("#008837","#f7f7f7","#f7f7f7","#7b3294")
p<-p + scale_fill_gradient(low=pallet[1],mid=pallet[2],high=pallet[4])
p<-p + scale_fill_gradient2(low=pallet[1],mid=pallet[2],high=pallet[4])
p
pallet<-c("#008837","#f7f7f7","#f7f7f7","#7b3294")
p<-p + scale_fill_gradient2(low=pallet[1],mid=pallet[3],high=pallet[4])
p<-ggplot(df2)+geom_tile(aes(x=id,y=variable,fill=value))
pallet<-c("#008837","#f7f7f7","#f7f7f7","#7b3294")
p<-p + scale_fill_gradient2(low=pallet[1],mid=pallet[3],high=pallet[4])
p
library(ggplot2)
library(shiny)
library(RColorBrewer)
library(GGally)
runApp()
setwd("msan622/homework3/")
runApp()
runApp()
runApp()
library(ggplot2)
library(grid)
library(reshape)
library(reshape2)
df <- data.frame(state.x77,
State = state.name,
Abbrev = state.abb,
Region = state.region,
Division = state.division)
df$Region <- as.factor(df$Region)
df$Abbrev <- as.factor(df$Abbrev)
df$Division <- as.factor(df$Division)
ggparcoord(df,columns = c(1,2,3,4,5),groupColumn=11)+ geom_line(aes(size=3,alpha=0.1),show_guide=FALSE)+scale_colour_manual(values = colours)
colours <- c("#D92121", "#D92121", "#D92121", "#21D921")
ggparcoord(df,columns = c(1,2,3,4,5),groupColumn=11)+ geom_line(aes(size=3,alpha=0.1),show_guide=FALSE)+scale_colour_manual(values = colours)
getwd()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
s=3
ggparcoord(df,columns = c(1,2,3,4,5),groupColumn=11)+ geom_line(aes(size=s,alpha=0.1),show_guide=FALSE)+scale_colour_manual(values = colours)
ggparcoord(df,columns = c(1,2,3,4,5),groupColumn=11,mapping=aes(size=3))+ geom_line(aes(alpha=0.1),show_guide=FALSE)+scale_colour_manual(values = colours)
ggparcoord(df,columns = c(1,2,3,4,5),groupColumn=11,mapping=aes(size=4))+ geom_line(aes(alpha=0.1),show_guide=FALSE)+scale_colour_manual(values = colours)
ggparcoord(df,columns = c(1,2,3,4,5),groupColumn=11,mapping=aes(size=1))+ geom_line(aes(alpha=0.1),show_guide=FALSE)+scale_colour_manual(values = colours)
ggparcoord(df,columns = c(1,2,3,4,5),groupColumn=11,mapping=aes(size=0.1))+ geom_line(aes(alpha=0.1),show_guide=FALSE)+scale_colour_manual(values = colours)
ggparcoord(df,columns = c(1,2,3,4,5),groupColumn=11,mapping=aes(size=0.1))+ geom_line(show_guide=FALSE)+scale_colour_manual(values = colours)
ggparcoord(df,columns = c(1,2,3,4,5),groupColumn=11,mapping=aes(size=100))+ geom_line(show_guide=FALSE)+scale_colour_manual(values = colours)
ggparcoord(df,columns = c(1,2,3,4,5),groupColumn=11,mapping=aes(size=1))+ geom_line(show_guide=FALSE)+scale_colour_manual(values = colours)
ggparcoord(df,columns = c(1,2,3,4,5),groupColumn=11,mapping=aes(size=0.01))+ geom_line(show_guide=FALSE)+scale_colour_manual(values = colours)
ggparcoord(df,columns = c(1,2,3,4,5),groupColumn=11,mapping=aes_string(size=1))+ geom_line(show_guide=FALSE)+scale_colour_manual(values = colours)
runApp()
ggparcoord(df,columns = c(1,2,3,4,5),groupColumn=11)+ geom_line(aes(size=1),show_guide=FALSE)+scale_colour_manual(values = colours)
ggparcoord(df,columns = c(1,2,3,4,5),groupColumn=11)+ geom_line(aes(size=0.1),show_guide=FALSE)+scale_colour_manual(values = colours)
ggparcoord(df,columns = c(1,2,3,4,5),groupColumn=11)+ geom_line(aes(alpha=0.1),show_guide=FALSE)+scale_colour_manual(values = colours)
ggparcoord(df,columns = c(1,2,3,4,5),groupColumn=11)+ geom_line(aes(size=1,alpha=0.1),show_guide=FALSE)+scale_colour_manual(values = colours)
ggparcoord(df,columns = c(1,2,3,4,5),groupColumn=11)+ geom_line(aes(size=2,alpha=0.1),show_guide=FALSE)+scale_colour_manual(values = colours)
ggparcoord(df,columns = c(1,2,3,4,5),groupColumn=11)+ geom_line(aes(size=3,alpha=0.1),show_guide=FALSE)+scale_colour_manual(values = colours)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
s
runApp()
library(shiny)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
ggparcoord(df,columns = c(1,2,3,4,5),groupColumn=11, mapping=aes_string(size=3,alpha=0.1))+ geom_line(show_guide=FALSE)+scale_colour_manual(values = colours)
ggparcoord(df,columns = c(1,2,3,4,5),groupColumn=11, mapping=aes_string(size=3,alpha=1))+ geom_line(show_guide=FALSE)+scale_colour_manual(values = colours)
ggparcoord(df,columns = c(1,2,3,4,5),groupColumn=11, mapping=aes_string(size=1,alpha=1))+ geom_line(show_guide=FALSE)+scale_colour_manual(values = colours)
ggparcoord(df,columns = c(1,2,3,4,5),groupColumn=11, mapping=aes_string(size=1,alpha=0))+ geom_line(show_guide=FALSE)+scale_colour_manual(values = colours)
ggparcoord(df,columns = c(1,2,3,4,5),groupColumn=11, mapping=aes(size=1,alpha=0))+ geom_line(show_guide=FALSE)+scale_colour_manual(values = colours)
ggparcoord(df,columns = c(1,2,3,4,5),groupColumn=11, mapping=aes(size=1,alpha=1))+ geom_line(show_guide=FALSE)+scale_colour_manual(values = colours)
ggparcoord(df,columns = c(1,2,3,4,5),groupColumn=11, mapping=aes(size=1))+ geom_line(aes(alpha=1),show_guide=FALSE)+scale_colour_manual(values = colours)
ggparcoord(df,columns = c(1,2,3,4,5),groupColumn=11, mapping=aes(size=1))+ geom_line(aes(alpha=0.1),show_guide=FALSE)+scale_colour_manual(values = colours)
ggparcoord(df,columns = c(1,2,3,4,5),groupColumn=11, mapping=aes(size=1))+ geom_line(alpha=0.1,show_guide=FALSE)+scale_colour_manual(values = colours)
ggparcoord(df,columns = c(1,2,3,4,5),groupColumn=11, mapping=aes(size=2))+ geom_line(alpha=0.1,show_guide=FALSE)+scale_colour_manual(values = colours)
ggparcoord(df,columns = c(1,2,3,4,5),groupColumn=11, mapping=aes(size=2))+ geom_line(alpha=0.2,show_guide=FALSE)+scale_colour_manual(values = colours)
ggparcoord(df,columns = c(1,2,3,4,5),groupColumn=11, mapping=aes(size=2))+ geom_line(alpha=0.9,show_guide=FALSE)+scale_colour_manual(values = colours)
ggparcoord(df,columns = c(1,2,3,4,5),groupColumn=11, mapping=aes(size=1))+ geom_line(alpha=0.9,show_guide=FALSE)+scale_colour_manual(values = colours)
ggparcoord(df,columns = c(1,2,3,4,5),groupColumn=11, mapping=aes(size=10))+ geom_line(alpha=0.9,show_guide=FALSE)+scale_colour_manual(values = colours)
ggparcoord(df,columns = c(1,2,3,4,5),groupColumn=11, mapping=aes(size=1))+ geom_line(alpha=0.9,show_guide=FALSE)+scale_colour_manual(values = colours)
ggparcoord(df,columns = c(1,2,3,4,5),groupColumn=11, mapping=aes(size=1))+ geom_line(alpha=0.1,show_guide=FALSE)+scale_colour_manual(values = colours)
ggparcoord(df,columns = c(1,2,3,4,5),groupColumn=11, mapping=aes(size=1))+ geom_line(alpha=0,show_guide=FALSE)+scale_colour_manual(values = colours)
runApp()
runApp()
runApp()
?ggpairs
ggpairs(df[,1:3])
ggpairs(df[,1:3],upper="blank")
ggpairs(df[,1:3],lower="blank")
ggpairs(df[,1:3],lower="blank",upper="point")
ggpairs(df[,1:3],lower="blank",upper="points")
ggpairs(df[,1:3],lower="blank",upper=list(continuous="points",combo="dot"))
custom_car <- ggpairs(mtcars[,c("mpg","wt","cyl")], upper = "blank", title = "Custom Example")
# ggplot example taken from example(geom_text)
plot <- ggplot(mtcars, aes(x=wt, y=mpg, label=rownames(mtcars)))
plot <- plot + geom_text(aes(colour=factor(cyl)), size = 3) + scale_colour_discrete(l=40)
custom_car <- putPlot(custom_car, plot, 1, 2)
personal_plot <- ggally_text(
"ggpairs allows you\nto put in your\nown plot.\nLike that one.\n <---"
)
custom_car <- putPlot(custom_car, personal_plot, 1, 3)
custom_car
ggpairs(df[,1:3],lower="blank",upper=list(continuous="points",combo="dot"))
ggpairs(df[,1:3],lower="blank",upper=list(continuous="points",combo="dot"),color=Region)
ggpairs(df[,1:3],lower="blank",upper=list(continuous="points",combo="dot"),color="Region")
ggpairs(df[,1:3],lower="blank",upper=list(continuous="points",combo="dot"),color=df[,12])
df[1,]
ggpairs(df[,1:3],lower="blank",upper=list(continuous="points",combo="dot"),color=as.factor(df[,12]))
ggpairs(df[,1:3],lower="blank",upper=list(continuous="points",combo="dot"),color="Region")
ggpairs(df[,c(1,2,3,12],lower="blank",upper=list(continuous="points",combo="dot"),color="Region")
ggpairs(df[,c(1,2,3,12)],lower="blank",upper=list(continuous="points",combo="dot"),color="Region")
ggpairs(df[,c(1,2,3,11)],lower="blank",upper=list(continuous="points",combo="dot"),color="Region")
plotmatrix(df)
ggpairs(iris,columns=1:3,colour="Species")
ggpairs(df,columns=1:3,lower="blank",upper=list(continuous="points",combo="dot"),color="Region")
?ggpairs
ggpairs(df,columns=1:3,lower="blank",upper=list(continuous="points",combo="dot"),color="Region")
ggpairs(df,columns=1:5,lower="blank",upper=list(continuous="points",combo="dot"),color="Region")
ggpairs(df,columns=1:5,lower="blank",upper=list(continuous="points",combo="dot"),color="Region",legends=TRUE)
ggpairs(df,columns=1:5,lower="blank",upper=list(continuous="points",combo="dot"),color="Region",legends=TRUE)+scale_colour_discrete("Region")
ggpairs(df,columns=1:5,lower="blank",upper=list(continuous="points",combo="dot"))+scale_colour_discrete("Region")
ggpairs(df,columns=1:5,lower="blank",upper=list(continuous="points",combo="dot"),col="Region")+scale_colour_discrete("Region")
ggpairs(df,columns=1:5,lower="blank",upper=list(continuous="points",combo="dot"),col="Region")+scale_colour_discrete()
processData<-function(dat){
dat2<-dat
colnames(dat2)<-gsub("\\."," ", colnames(dat2))
dat2<-dat2[sapply(dat2, is.numeric)]
dat2<-rescaler(dat2,type="range")
dat2$id<-1:nrow(dat)
dat2<-melt(dat2,"id")
dat2$id<-factor(dat2$id, levels=1:nrow(dat),ordered=TRUE)
return(dat2)
}
processData(df)
df2<-processData(df)
ggplot(df2)+geom_point(aes(x=value,y=value)
)
ggplot(df2)+geom_point(aes(x=value,y=value))+facet_wrap(~variable)
df2$variables2<-df2$variable
ggplot(df2)+geom_point(aes(x=value,y=value))+facet_wrap(variable2~variable)
ggplot(df2)+geom_point(aes(x=value,y=value))+facet_grid(variable2~variable)
mtcars[1,]
df[1,]
df2[1,]
df2$value2<-df2$value
df[1,]
df2[1,]
ggplot(df2)+geom_point(aes(x=value,y=value))+facet_grid(variable2~variable)
ggplot(df2)+geom_point(aes(x=value,y=value2))+facet_grid(variable2~variable)
ggplot(df2)+geom_point(aes(x=value,y=value2))
ggplot(df2)+geom_point(aes(x=value,y=value2))+facet_grid(~variable)
ggplot(df2)+geom_point(aes(x=value,y=value2))+facet_grid(~variable+variavle2)
ggplot(df2)+geom_point(aes(x=value,y=value2))+facet_grid(variavle2~variable)
dim(df)
df2$variable2[1:50]<-df2$variable[51:100]
df2$variable2[51:100]<-df2$variable[101:150]
dim(df2)
df2$variable2[101:150]<-df2$variable[151:200]
df2$variable2[151:200]<-df2$variable[201:250]
df2$variable2[201:250]<-df2$variable[251:300]
df2$variable2[251:300]<-df2$variable[301:350]
df2$variable2[301:300]<-df2$variable[351:400]
df2$variable2[301:350]<-df2$variable[351:400]
df2$variable2[351:400]<-df2$variable[1:50]
df2[1,]
df2
df2$variable2[1:50]<-df2$variable[51:100]
df2[1,]
df2$variable2[1:50]
df2$variable2[1:50]<-as.character(df2$variable[51:100])
df2[1,]
df2$variable<-as.character(df2$variable)
df2$variable2[1:50]<-as.character(df2$variable[51:100])
df2[1,]
df2
df3<-df2[1:50,]
df[1,]
df2[1,]
ggpairs(df,columns=1:5,lower="blank",upper=list(continuous="points",combo="dot"),color="Region")
?ggpairs
ggplot(df)+geom_point(aes(x=Population,y=Income),col=Region)
ggplot(df)+geom_point(aes(x=Population,y=Income,col=Region))
ggplot(df)+geom_point(aes(x=Population,y=Income,col=Region))+theme(legend.position = c(0.95, 0.95), legend.justification = c(1, 1))
ggplot(df)+geom_point(aes(x=Population,y=Income,col=Region))+theme(legend.position = c(0, 0), legend.justification = c(1, 1))
ggplot(df)+geom_point(aes(x=0,y=0,col=Region))+theme(legend.position = c(0, 0), legend.justification = c(1, 1))
g<-ggpairs(df,columns=1:5,color="Region")
g
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
df[1,]
df[,11]
df[,11] == c("South","West")
df[,11] %in% c("South","West")
df[df[,11] %in% c("South","West"),]
runApp()
runApp()
idx<-1:dim(df)[2]
df[1,]
col_var<-c("Income","Life.Exp")
col_idx<-idx[colnames(df) == col_var]
x_var<-c("Income","Life.Exp")
col_var<-"Region"
idx<-1:dim(df)[2]
col_idx<-idx[colnames(df) == col_var]
var_idx<-idx[colnames(df) %in% x_var]
df2<-df[df[,11] %in% sub,]
sub<-c("South","West")
df2<-df[df[,11] %in% sub,]
g<-ggpairs(df2,columns=var_idx,color=col_var)
return(g)
g
runApp()
runApp()
runApp()
runApp()
runApp()
