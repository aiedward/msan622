library(ggplot2)
data(movies)
data(EuStockMarkets)
library(reshape2)
eu2<-melt(eu[,1:4])
time<-rep(eu[,5],4)
eu <- transform(data.frame(EuStockMarkets), time = time(EuStockMarkets))
(1/2 +1/sqrt(5))^(1/2)
-(1/sqrt(2))*(1-2/sqrt(5))^(1/2)
x<-c(2,0,0,0,4,0,0,0,4)
x<-matrix(c(2,0,0,0,4,0,0,0,4),ncol=3)
x
eigen(x)
x<-matrix(c(1,0,0,0,1,0,0,0,1),ncol=3)
eigen(x)
x<-matrix(c(4,0,0,0,3,0,0,0,2),ncol=3)
eigen(x)
x<-matrix(c(10005.2,255.76,255.76,14.3),ncol=2)
x
eigen(x)
-0.99967293^2+-0.02557417^2
10011.742991 /(tr(x))
10011.742991 /(trace(x))
10011.742991 /trace(x)
10011.742991 /(10005.20+14.30)
255.76/(sqrt(10005.2)*sqrt(255.76))
0.9997*sqrt(10011.74)/sqrt(10005.2)
0.9997*sqrt(10011.742991)/sqrt(10005.2)
-0.99967293*sqrt(10011.742991)/sqrt(10005.2)
library(shiny)
shiny::runGitHub('msan622', 'yosukekatada', subdir='homework2')
library(shiny)
shiny::runGitHub('msan622', 'yosukekatada', subdir='homework2')
data(state.x77)
library(datasets)
data(state.x77)
state.x77
library(ggplot2)
df <- data.frame(state.x77,
State = state.name,
Abbrev = state.abb,
Region = state.region,
Division = state.division)
df[1,]
plotmatrix(df[,1:8])
?ggpairs
library(grid)
p<-ggplot(df)+geom_point(aes(x=Income, y =Life.Exp, size = Population))
p
p<-ggplot(df)+geom_point(aes(x=Income, y =Life.Exp, size = Population/100))
p
p<-ggplot(df)+geom_point(aes(x=Income, y =Life.Exp, size = Population))
p
p<-ggplot(df)+geom_point(aes(x=Income, y =Life.Exp, fill= Region, size = Population))
p
p<-ggplot(df)+geom_point(aes(x=Income, y =Life.Exp, fill= as.factor(Region), size = Population))
p
p<-ggplot(df)+geom_point(aes(x=Income, y =Life.Exp, fill= as.factor(Region)+1, size = Population))
p
df$Region <- as.factor(df$Region)
p<-ggplot(df)+geom_point(aes(x=Income, y =Life.Exp, fill= Region, size = Population))
p
p<-ggplot(df)+geom_point(aes(x=Income, y =Life.Exp, color= Region, size = Population))
p
p<-ggplot(df)+geom_point(aes(x=Income, y =Life.Exp, color= Region, size = Population),alpha=0.6, position="jitter")
p
p<-ggplot(df)+geom_point(aes(x=Income, y =Life.Exp, color= Region, size = Population),alpha=0.6, position="jitter")
p<-p+scale_size_area(max=10)
p<-ggplot(df)+geom_point(aes(x=Income, y =Life.Exp, color= Region, size = Population),alpha=0.6, position="jitter")
p<-p+scale_size_area(max_size==10)
p<-ggplot(df)+geom_point(aes(x=Income, y =Life.Exp, color= Region, size = Population),alpha=0.6, position="jitter")
p<-p+scale_size_area(max_size=10)
p
p<-ggplot(df)+geom_point(aes(x=Income, y =Life.Exp, color= Region, size = Population),alpha=0.6, position="jitter")
p<-p+scale_size_area(max_size=20)
p
df<-df[order(df$Population,decreasing=TRUE),]
p<-ggplot(df)+geom_point(aes(x=Income, y =Life.Exp, color= Region, size = Population),alpha=0.6, position="jitter")
p<-p+scale_size_area(max_size=20)
p
p<-ggplot(df)+geom_point(aes(x=Income, y =Life.Exp, color= Region, size = Population),alpha=1, position="jitter")
p<-p+scale_size_area(max_size=20)
p
ggpairs(df[,1:8])
install.packages("GGally")
library(GGalery)
library(GGally)
ggpairs(df[,1:8])
p<-p+annotate("text",x=10,y= 20, label = "Circle is the size of Population")
p
p<-ggplot(df)+geom_point(aes(x=Income, y =Life.Exp, color= Region, size = Population),alpha=1, position="jitter")
p<-p+scale_size_area(max_size=20)
p<-p+annotate("text",x=1000,y= 70, label = "Circle is the size of Population")
p
p<-p+guides(color=guide_legend(override.aes = list(size=8)))
p
p<-ggplot(df)+geom_point(aes(x=Income, y =Life.Exp, color= Region, size = Population),alpha=1, position="jitter")
p<-p+scale_size_area(max_size=20, guide="none")
p<-p+guides(color=guide_legend(override.aes = list(size=8)))
p<-p+annotate("text",x=1000,y= 70, label = "Circle is the size of Population")
p
df<-df[order(df$Population,decreasing=TRUE),]
p<-ggplot(df)+geom_point(aes(x=Income, y =Life.Exp, color= Region, size = Population),alpha=1, position="jitter")
p<-p+scale_size_area(max_size=20, guide="none")
p<-p+guides(color=guide_legend(override.aes = list(size=8)))
p<-p+annotate("text",x=4000,y= 80, label = "Circle is the size of Population")
p
df<-df[order(df$Population,decreasing=TRUE),]
p<-ggplot(df)+geom_point(aes(x=Income, y =Life.Exp, color= Region, size = Population),alpha=1, position="jitter")
p<-p+scale_size_area(max_size=20, guide="none")
p<-p+guides(color=guide_legend(override.aes = list(size=8)))
p<-p+annotate("text",x=(max(Income)-min(Income))/2,y= 70, label = "Circle is the size of Population")
p<-p+annotate("text",x=(max(df$Income)-min(df$Income))/2,y= 70, label = "Circle is the size of Population")
p
df<-df[order(df$Population,decreasing=TRUE),]
p<-ggplot(df)+geom_point(aes(x=Income, y =Life.Exp, color= Region, size = Population),alpha=1, position="jitter")
p<-p+scale_size_area(max_size=20, guide="none")
p<-p+guides(color=guide_legend(override.aes = list(size=8)))
p<-p+annotate("text",x=(max(df$Income)+min(df$Income))/2,y= 70, label = "Circle is the size of Population")
p
df<-df[order(df$Population,decreasing=TRUE),]
p<-ggplot(df)+geom_point(aes(x=Income, y =Life.Exp, color= Region, size = Population),alpha=1, position="jitter")
p<-p+scale_size_area(max_size=20, guide="none")
p<-p+guides(color=guide_legend(override.aes = list(size=8)))
p<-p+annotate("text",x=(max(df$Income)+min(df$Income))/2,y= max(df$Life.Exp)-1, label = "Circle is the size of Population")
p
df<-df[order(df$Population,decreasing=TRUE),]
p<-ggplot(df)+geom_point(aes(x=Income, y =Life.Exp, color= Region, size = Population),alpha=1, position="jitter")
p<-p+scale_size_area(max_size=20, guide="none")
p<-p+guides(color=guide_legend(override.aes = list(size=8)))
p<-p+annotate("text",x=(max(df$Income)+min(df$Income))/2,y= max(df$Life.Exp)+1, label = "Circle is the size of Population")
p
library(reshape2)
melt(df)
df_m<-melt(df)
df_m2<-subset(df_m,variable=='Income')
p<-ggplot(df_m2)+geom_tile(aes(x=Abbrev,y=Region,fill=Income))
p
df_m2
p<-ggplot(df_m2)+geom_tile(aes(x=Abbrev,y=Region,fill=value))
p
library(reshape)
?gsub
gsub("\\."," ", colnames(df))
sapply(df, is.numeric)
processData<-function(dat){
dat2<-dat
colnames(dat2)<-gsub("\\."," ", colnames(dat2))
dat2<-dat2[sapply(dat2, is.numeric)]
dat2<-rescaler(dat2,type="range")
dat2$id<-1:nrow(dat)
dat2<-melt(dat2,"id")
dat2$id<-factor(dat2$id, levels=1:nrow(original),ordered=TRUE)
return(dat2)
}
processData(iris)
processData<-function(dat){
dat2<-dat
colnames(dat2)<-gsub("\\."," ", colnames(dat2))
dat2<-dat2[sapply(dat2, is.numeric)]
dat2<-rescaler(dat2,type="range")
dat2$id<-1:nrow(dat)
dat2<-melt(dat2,"id")
dat2$id<-factor(dat2$id, levels=1:nrow(dat),ordered=TRUE)
return(dat2)
}
processData(iris)
processData(df)
dat<-df
dat2<-dat
colnames(dat2)<-gsub("\\."," ", colnames(dat2))
dat2[1,]
dat2<-dat2[sapply(dat2, is.numeric)]
dat2[1,]
dat2<-rescaler(dat2,type="range")
dat2[1,]
dat2$id<-1:nrow(dat)
dat2[1,]
dat2<-melt(dat2,"id")
dat2[1,]
dat2$id<-factor(dat2$id, levels=1:nrow(dat),ordered=TRUE)
dat2
df2<-processData(df)
p<-ggplot(df2)+geom_tile(aes(x=id,y=variable,fill=value))
p
levels(df2$variable)
pallet<-c("#008837","#f7f7f7","#f7f7f7","#7b3294")
p<-p + scale_fill_gradient(low=pallet[1],mid=pallet[2],high=pallet[4])
p<-p + scale_fill_gradient2(low=pallet[1],mid=pallet[2],high=pallet[4])
p
pallet<-c("#008837","#f7f7f7","#f7f7f7","#7b3294")
p<-p + scale_fill_gradient2(low=pallet[1],mid=pallet[3],high=pallet[4])
p<-ggplot(df2)+geom_tile(aes(x=id,y=variable,fill=value))
pallet<-c("#008837","#f7f7f7","#f7f7f7","#7b3294")
p<-p + scale_fill_gradient2(low=pallet[1],mid=pallet[3],high=pallet[4])
p
library(shiny)
runGitHub("msan622", "yosukekatada", subdir = "homework3")
library(shiny)
runGitHub("msan622", "yosukekatada", subdir = "homework3")
install.packages("SnowballC")
library(tm)
install.packages("tm")
library(tm)
library(SnowballC)
getSources()
tm
getTransformations()
sotu_source<- DirSource(
directory = "sotu",
enconding = "UTF-8",
pattern = "*.txt",
recursive = FALSE,
ignore.case = TRUE
)
sotu_source<- DirSource(
directory = "sotu",
encoding = "UTF-8",
pattern = "*.txt",
recursive = FALSE,
ignore.case = TRUE
)
install.packages("wordcloud")
library(shiny)
runGitHub("msan622", "yosukekatada", subdir = "homework3")
library(shiny)
runGitHub("msan622", "yosukekatada", subdir = "homework3")
library(devtools)
source_url("https://raw.githubusercontent.com/yosukekatada/msan622/master/homework4/HW4.R")
setwd("Documents/MSAN/Data_Visalization/msan622/project-dataset/")
data<-read.csv("bank-full.csv")
data[1,]
data<-read.csv("bank-full.csv",sep=";")
data[1,]
colnames(age)
colnames(data)
sumamry(data)
summary(data)
glm(y~.,data=dara,family="binom")
glm(y~.,data=dara,family="binomial")
glm(y~.,data=data,family="binomial")
glm
dim(data)
