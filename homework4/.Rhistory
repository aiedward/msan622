speech_data<-tm_map(speech_data,removeWords,c("america","american","americans","americas","come","country",
"day","done","get","states","time","today","want","way","world",
"tonight","year","years","people"))
#After processing text data, create doc matrix
text_mat<-DocumentTermMatrix(speech_data)
comparison.cloud(text_mat)
comparison.cloud(text_mat[,1])
term_mat<-TermDocumentMatrix(speech_data)
comparison.cloud(term_mat)
comparison.cloud(as.matrix(term_mat))
as.matrix(term_mat)
as.matrix(term_mat)[1,]
as.matrix(speech_data)
speech_data<-as.data.frame((inspect(text_mat)))
speech_data<-as.data.frame(t(speech_data))
colnames(speech_data)<-c("YEAR2009","YEAR2010","YEAR2011","YEAR2012","YEAR2013","YEAR2014")
as.matrix(speech_data)
comparison.cloud(mat2)
mat2<-as.matrix(speech_data)
comparison.cloud(mat2)
colnames(speech_data)<-c("2009","2010","2011","2012","2013","2014")
mat2<-as.matrix(speech_data)
comparison.cloud(mat2)
?comparison.cloud
comparison.cloud(mat2,max.words=Inf,random.order=FALSE)
commonality.cloud(mat2)
colnames(speech_data)<-c("2009","2010","2011","2012","2013","2014")
mat2<-speech_data[apply(speech_data,1,sum) >10,]
mat2<-as.matrix(mat2)
comparison.cloud(mat2,max.words=Inf,random.order=FALSE)
dim(mat2)
max_words<-as.integer(dim(mat2)[1]*0.5)
max_words
comparison.cloud(mat2,max.words=300,random.order=FALSE)
comparison.cloud(mat2,max.words=max_words,random.order=FALSE)
colnames(speech_data)<-c("2009","2010","2011","2012","2013","2014")
mat2<-speech_data[apply(speech_data,1,sum) >10,]
mat2<-as.matrix(mat2)
max_words<-as.integer(dim(mat2)[1]*0.3)
comparison.cloud(mat2,max.words=max_words,random.order=FALSE)
warnings()
comparison.cloud(mat2,max.words=max_words,random.order=FALSE)
colnames(speech_data)<-c("2009","2010","2011","2012","2013","2014")
mat2<-speech_data[apply(speech_data,1,sum) >10,]
mat2<-as.matrix(mat2)
max_words<-as.integer(dim(mat2)[1]*0.5)
comparison.cloud(mat2,max.words=max_words,random.order=FALSE)
colnames(speech_data)<-c("2009","2010","2011","2012","2013","2014")
mat2<-speech_data[apply(speech_data,1,sum) >10,]
mat2<-as.matrix(mat2)
max_words<-as.integer(dim(mat2)[1]*0.1)
comparison.cloud(mat2,max.words=max_words,random.order=FALSE)
colnames(speech_data)<-c("2009","2010","2011","2012","2013","2014")
mat2<-speech_data[apply(speech_data,1,sum) >10,]
mat2<-as.matrix(mat2)
max_words<-as.integer(dim(mat2)[1]*0.2)
comparison.cloud(mat2,max.words=max_words,random.order=FALSE)
colnames(speech_data)<-c("2009","2010","2011","2012","2013","2014")
mat2<-speech_data[apply(speech_data,1,sum) >10,]
mat2<-as.matrix(mat2)
max_words<-as.integer(dim(mat2)[1]*0.3)
comparison.cloud(mat2,max.words=max_words,random.order=FALSE)
colnames(speech_data)<-c("2009","2010","2011","2012","2013","2014")
mat2<-speech_data[apply(speech_data,1,sum) >10,]
mat2<-as.matrix(mat2)
max_words<-as.integer(dim(mat2)[1]*0.4)
comparison.cloud(mat2,max.words=max_words,random.order=FALSE)
colnames(speech_data)<-c("2009","2010","2011","2012","2013","2014")
mat2<-speech_data[apply(speech_data,1,sum) >10,]
mat2<-as.matrix(mat2)
max_words<-as.integer(dim(mat2)[1]*0.35)
comparison.cloud(mat2,max.words=max_words,random.order=FALSE)
comparison.cloud(mat2,colors = brewer.pal(6,"Accent"),max.words=max_words,random.order=FALSE)
comparison.cloud(mat2,colors = brewer.pal(6,"Set1"),max.words=max_words,random.order=FALSE)
comparison.cloud(mat2,colors = brewer.pal(6,"Dark1"),max.words=max_words,random.order=FALSE)
comparison.cloud(mat2,colors = brewer.pal(6,"Dark2"),max.words=max_words,random.order=FALSE)
max_words<-as.integer(dim(mat2)[1]*0.4) #To fit the word cloud into one page
comparison.cloud(mat2,colors = brewer.pal(6,"Dark2"),max.words=max_words,random.order=FALSE)
max_words<-as.integer(dim(mat2)[1]*0.35) #To fit the word cloud into one page
comparison.cloud(mat2,colors = brewer.pal(6,"Dark2"),max.words=max_words,random.order=FALSE)
print(g)
colnames(speech_data)<-c("2009","2010","2011","2012","2013","2014")
mat2<-speech_data[apply(speech_data,1,sum) >10,]
mat2<-as.matrix(mat2)
max_words<-as.integer(dim(mat2)[1]*0.35) #To fit the word cloud into one page
comparison.cloud(mat2,colors = brewer.pal(6,"Dark2"),max.words=max_words,random.order=FALSE)
df
df$id<-row.names(df)
df2<-df
df2$id<-row.names(df2)
melt(df2,"id")
df2<-melt(df2,"id")
ggplot(df2)+geom_tile(aes(x=id,y=filled,fill=value))
ggplot(df2)+geom_tile(aes(x=id,y=variable,fill=value))
df2<-df<-speech_data[apply(speech_data,1,sum) >10,]
df2<-speech_data[apply(speech_data,1,sum) >10,]
df2$id<-row.names(df2)
df2<-melt(df2,"id")
ggplot(df2)+geom_tile(aes(x=id,y=variable,fill=value))
df2<-speech_data[apply(speech_data,1,sum) >20,]
df2$id<-row.names(df2)
df2<-melt(df2,"id")
ggplot(df2)+geom_tile(aes(x=id,y=variable,fill=value))
df2<-speech_data[apply(speech_data,1,sum) >30,]
df2$id<-row.names(df2)
df2<-melt(df2,"id")
ggplot(df2)+geom_tile(aes(x=id,y=variable,fill=value))
df2<-speech_data[apply(speech_data,1,sum) >40,]
df2$id<-row.names(df2)
df2<-melt(df2,"id")
ggplot(df2)+geom_tile(aes(x=id,y=variable,fill=value))
ggplot(df2)+geom_tile(aes(x=id,y=variable,fill=value),colour = "white")
p<-ggplot(df2)+geom_tile(aes(x=id,y=variable,fill=value),colour = "white")
p <- p + theme_minimal()
p
p <- p + theme(axis.text.y = element_text(angle = 90, hjust = 0.5))
p
df2<-speech_data[apply(speech_data,1,sum) >40,]
df2$id<-row.names(df2)
df2<-melt(df2,"id")
p<-ggplot(df2)+geom_tile(aes(x=id,y=variable,fill=value),colour = "white")
p <- p + theme_minimal()
p
p<-p+coord_flip()
p
p <- p + scale_fill_gradient2(low = palette[1], mid = palette[2], high = palette[4], midpoint = 20)
palette <- c("#008837", "#f7f7f7", "#f7f7f7", "#7b3294")
p <- p + scale_fill_gradient2(low = palette[1], mid = palette[2], high = palette[4], midpoint = 20)
p <- p + theme(axis.text.y = element_text(angle = 90, hjust = 0.5))
p
df2<-speech_data[apply(speech_data,1,sum) >40,]
df2$id<-row.names(df2)
df2<-melt(df2,"id")
p<-ggplot(df2)+geom_tile(aes(x=id,y=variable,fill=value),colour = "white")
p <- p + theme_minimal()
p<-p+coord_flip()
palette <- c("#008837", "#f7f7f7", "#f7f7f7", "#7b3294")
p <- p + scale_fill_gradient2(low = palette[1], mid = palette[2], high = palette[4], midpoint = 20)
p
p <- p + scale_fill_gradient2(low = palette[1], mid = palette[2], high = palette[4], midpoint = 30)
df2<-speech_data[apply(speech_data,1,sum) >40,]
df2$id<-row.names(df2)
df2<-melt(df2,"id")
p<-ggplot(df2)+geom_tile(aes(x=id,y=variable,fill=value),colour = "white")
p <- p + theme_minimal()
p<-p+coord_flip()
palette <- c("#008837", "#f7f7f7", "#f7f7f7", "#7b3294")
p <- p + scale_fill_gradient2(low = palette[1], mid = palette[2], high = palette[4], midpoint = 30)
p
palette <- c("#008837", "#f7f7f7", "#f7f7f7", "#7b3294")
pallette
palette
plot(palette)
plot(rep((1,4),col=palette)
plot(rep(1,4),col=palette)
pie(rep(1,4),col=palette)
palette <- c("#008837", "#f7f7f7","#7b3294")
p <- p + scale_fill_gradient2(low = palette[1], mid = palette[2], high = palette[3], midpoint = 30)
df2<-speech_data[apply(speech_data,1,sum) >40,]
df2$id<-row.names(df2)
df2<-melt(df2,"id")
p<-ggplot(df2)+geom_tile(aes(x=id,y=variable,fill=value),colour = "white")
p <- p + theme_minimal()
p<-p+coord_flip()
palette <- c("#008837", "#f7f7f7","#7b3294")
p <- p + scale_fill_gradient2(low = palette[1], mid = palette[2], high = palette[3], midpoint = 30)
p
p<-p+theme(axis.text.x = element_blank())
p
p<-p+theme(axis.text.x = element_text(size=12)
)
p
p<-p+theme(axis.text.x = element_text(size=17),
axis.text.y = element_text(size=17),
axis.title.x =element_blank(),
axis.title.y =element_blank())
p
p <- p + scale_fill_gradientn(colours = palette, values = c(0, 10, 20, 40))
p<-ggplot(df2)+geom_tile(aes(x=id,y=variable,fill=value),colour = "white")
p <- p + theme_minimal()
p<-p+coord_flip()
p<-p+theme(axis.text.x = element_text(size=17),
axis.text.y = element_text(size=17),
axis.title.x =element_blank(),
axis.title.y =element_blank())
palette <- c("#008837", "#f7f7f7", "#f7f7f7" ,"#7b3294")
p <- p + scale_fill_gradientn(colours = palette, values = c(0, 10, 20, 40))
p
p <- p + scale_fill_gradientn(colours = palette, values = c(0, 0.1, 0.2, 1))
p<-ggplot(df2)+geom_tile(aes(x=id,y=variable,fill=value),colour = "white")
p <- p + theme_minimal()
p<-p+coord_flip()
p<-p+theme(axis.text.x = element_text(size=17),
axis.text.y = element_text(size=17),
axis.title.x =element_blank(),
axis.title.y =element_blank())
palette <- c("#008837", "#f7f7f7", "#f7f7f7" ,"#7b3294")
p <- p + scale_fill_gradientn(colours = palette, values = c(0, 0.1, 0.2, 1))
p
p<-ggplot(df2)+geom_tile(aes(x=id,y=variable,fill=value),colour = "white")
p <- p + theme_minimal()
p<-p+coord_flip()
p<-p+theme(axis.text.x = element_text(size=17),
axis.text.y = element_text(size=17),
axis.title.x =element_blank(),
axis.title.y =element_blank())
palette <- c("#008837", "#f7f7f7", "#f7f7f7" ,"#7b3294")
p <- p + scale_fill_gradientn(colours = palette, values = c(0, 0.3, 0.6, 1))
p
p<-ggplot(df2)+geom_tile(aes(x=id,y=variable,fill=value),colour = "white")
p <- p + theme_minimal()
p<-p+coord_flip()
p<-p+theme(axis.text.x = element_text(size=17),
axis.text.y = element_text(size=17),
axis.title.x =element_blank(),
axis.title.y =element_blank())
palette <- c("#f7f7f7", "#fee0d2", "#fc9272" ,"#de2d26")
p <- p + scale_fill_gradientn(colours = palette, values = c(0, 0.3, 0.6, 1))
p
p<-ggplot(df2)+geom_tile(aes(x=id,y=variable,fill=value),colour = "white")
p <- p + theme_minimal()
p<-p+coord_flip()
p<-p+theme(axis.text.x = element_text(size=17),
axis.text.y = element_text(size=17),
axis.title.x =element_blank(),
axis.title.y =element_blank())
palette <- c("#f1eef6", "#d7b5d8", "#df65b0" ,"#ce1256")
p <- p + scale_fill_gradientn(colours = palette, values = c(0, 0.3, 0.6, 1))
p
p<-ggplot(df2)+geom_tile(aes(x=id,y=variable,fill=value),colour = "white")
p<-p+theme_minimal()
p<-p+ggtitle("SOTU Word Frequency from 2009 to 2014")
p<-p+coord_flip()
p<-p+theme(axis.text.x = element_text(size=17),
axis.text.y = element_text(size=17),
axis.title.x =element_blank(),
axis.title.y =element_blank())
palette <- c("#f1eef6", "#d7b5d8", "#df65b0" ,"#ce1256")
p <- p + scale_fill_gradientn(colours = palette, values = c(0, 0.3, 0.6, 1))
p
df2
df2<-speech_data[apply(speech_data,1,sum) >40,]
df2
df2<-speech_data[apply(speech_data,1,sum) >40,]
df2<-df2[order(apply(df2,1,sum),),]
df2<-speech_data[apply(speech_data,1,sum) >40,]
df2<-df2[order(apply(df2,1,sum),decreasing=TRUE),]
df2$id<-row.names(df2)
df2<-melt(df2,"id")
p<-ggplot(df2)+geom_tile(aes(x=id,y=variable,fill=value),colour = "white")
p<-p+theme_minimal()
p<-p+ggtitle("SOTU Word Frequency from 2009 to 2014")
p<-p+coord_flip()
p<-p+theme(axis.text.x = element_text(size=17),
axis.text.y = element_text(size=17),
axis.title.x =element_blank(),
axis.title.y =element_blank())
palette <- c("#f1eef6", "#d7b5d8", "#df65b0" ,"#ce1256")
p <- p + scale_fill_gradientn(colours = palette, values = c(0, 0.3, 0.6, 1))
p
p<-p+theme(plot.title = element_text(size=24),
axis.text.x = element_text(size=17),
axis.text.y = element_text(size=17),
axis.title.x =element_blank(),
axis.title.y =element_blank(),
)
palette <- c("#f1eef6", "#d7b5d8", "#df65b0" ,"#ce1256")
p <- p + scale_fill_gradientn(colours = palette, values = c(0, 0.3, 0.6, 1))
p<-ggplot(df2)+geom_tile(aes(x=id,y=variable,fill=value),colour = "white")
p<-p+theme_minimal()
p<-p+ggtitle("SOTU Word Frequency from 2009 to 2014")
p<-p+coord_flip()
p<-p+theme(plot.title = element_text(size=24),
axis.text.x = element_text(size=17),
axis.text.y = element_text(size=17),
axis.title.x =element_blank(),
axis.title.y =element_blank(),
)
palette <- c("#f1eef6", "#d7b5d8", "#df65b0" ,"#ce1256")
p <- p + scale_fill_gradientn(colours = palette, values = c(0, 0.3, 0.6, 1))
p<-ggplot(df2)+geom_tile(aes(x=id,y=variable,fill=value),colour = "white")
p<-p+theme_minimal()
p<-p+ggtitle("SOTU Word Frequency from 2009 to 2014")
p<-p+coord_flip()
p<-p+theme(plot.title = element_text(size=24),
axis.text.x = element_text(size=17),
axis.text.y = element_text(size=17),
axis.title.x =element_blank(),
axis.title.y =element_blank())
palette <- c("#f1eef6", "#d7b5d8", "#df65b0" ,"#ce1256")
p <- p + scale_fill_gradientn(colours = palette, values = c(0, 0.3, 0.6, 1))
p
p<-ggplot(df2)+geom_tile(aes(x=id,y=variable,fill=value),colour = "white")
p<-p+theme_minimal()
p<-p+ggtitle("SOTU Word Frequency from 2009 to 2014 \n(Sum of Term Frequcny from 2009 to 2014 > 40)")
p<-p+coord_flip()
p<-p+theme(plot.title = element_text(size=24),
axis.text.x = element_text(size=17),
axis.text.y = element_text(size=17),
axis.title.x =element_blank(),
axis.title.y =element_blank())
palette <- c("#f1eef6", "#d7b5d8", "#df65b0" ,"#ce1256")
p <- p + scale_fill_gradientn(colours = palette, values = c(0, 0.3, 0.6, 1))
p
p<-ggplot(df2)+geom_tile(aes(x=id,y=variable,fill=value),colour = "white")
p<-p+theme_minimal()
p<-p+ggtitle("SOTU Word Frequency from 2009 to 2014 \n(This heatmap covers only the words whose um of Term Frequcny from 2009 to 2014 is greater than 40)")
p<-p+coord_flip()
p<-p+theme(plot.title = element_text(size=24),
axis.text.x = element_text(size=17),
axis.text.y = element_text(size=17),
axis.title.x =element_blank(),
axis.title.y =element_blank())
palette <- c("#f1eef6", "#d7b5d8", "#df65b0" ,"#ce1256")
p <- p + scale_fill_gradientn(colours = palette, values = c(0, 0.3, 0.6, 1))
p
p<-ggplot(df2)+geom_tile(aes(x=id,y=variable,fill=value),colour = "white")
p<-p+theme_minimal()
p<-p+ggtitle("SOTU Word Frequency from 2009 to 2014 \n(it covers only words whose sum of term frequency from 2009 to 2014 > 40)")
p<-p+coord_flip()
p<-p+theme(plot.title = element_text(size=24),
axis.text.x = element_text(size=17),
axis.text.y = element_text(size=17),
axis.title.x =element_blank(),
axis.title.y =element_blank())
palette <- c("#f1eef6", "#d7b5d8", "#df65b0" ,"#ce1256")
p <- p + scale_fill_gradientn(colours = palette, values = c(0, 0.3, 0.6, 1))
p
df2<-speech_data[apply(speech_data,1,sum) >40,]
df2<-df2[order(df2[,6],decreasing=TRUE),]
df2$id<-row.names(df2)
df2<-melt(df2,"id")
p<-ggplot(df2)+geom_tile(aes(x=id,y=variable,fill=value),colour = "white")
p<-p+theme_minimal()
p<-p+ggtitle("SOTU Word Frequency from 2009 to 2014 \n(it covers only words whose sum of term frequency from 2009 to 2014 > 40)")
p<-p+coord_flip()
p<-p+theme(plot.title = element_text(size=24),
axis.text.x = element_text(size=17),
axis.text.y = element_text(size=17),
axis.title.x =element_blank(),
axis.title.y =element_blank())
palette <- c("#f1eef6", "#d7b5d8", "#df65b0" ,"#ce1256")
p <- p + scale_fill_gradientn(colours = palette, values = c(0, 0.3, 0.6, 1))
p
df2
df2<-speech_data[apply(speech_data,1,sum) >40,]
df2
df2$id<-row.names(df2)
df2
df2$id
df2<-speech_data[apply(speech_data,1,sum) >40,]
df2$id<-factor(row.names(df2),levels = order(df2[,6],decreasing=TRUE))
df2<-melt(df2,"id",ordered = TRUE)
p<-ggplot(df2)+geom_tile(aes(x=id,y=variable,fill=value),colour = "white")
p<-p+theme_minimal()
p<-p+ggtitle("SOTU Word Frequency from 2009 to 2014 \n(it covers only words whose sum of term frequency from 2009 to 2014 > 40)")
p<-p+coord_flip()
p<-p+theme(plot.title = element_text(size=24),
axis.text.x = element_text(size=17),
axis.text.y = element_text(size=17),
axis.title.x =element_blank(),
axis.title.y =element_blank())
palette <- c("#f1eef6", "#d7b5d8", "#df65b0" ,"#ce1256")
p <- p + scale_fill_gradientn(colours = palette, values = c(0, 0.3, 0.6, 1))
p
df2<-speech_data[apply(speech_data,1,sum) >40,]
df2$id<-factor(row.names(df2),levels = order(df2[,6],decreasing=TRUE))
df2
factor(id,levels = order(df2[,6],decreasing=TRUE))
factor("id",levels = order(df2[,6],decreasing=TRUE))
factor(row.names(df2),levels = order(df2[,6],decreasing=TRUE))
factor(as.character(row.names(df2)),levels = order(df2[,6],decreasing=TRUE))
words<-as.character(row.names(df2))
words
factor(words,levels = order(df2[,6],decreasing=TRUE))
factor(words,levels = order(df2[,6],decreasing=TRUE),label=words)
factor(words)
levels(factor(words))
as.numeric(factor(words))
factor(x=words)
factor(x=words,levels=order(df2[,6],decreasing=TRUE))
order(df2[,6],decreasing=TRUE)
substring("statistics",1:10,1:10)
order(df2[,6],decreasing=TRUE)
row.names(df2)[order(df2[,6],decreasing=TRUE)]
factor(x=words,row.names(df2)[order(df2[,6],decreasing=TRUE)])
df2[1,]
df2<-speech_data[apply(speech_data,1,sum) >40,]
words<-as.character(row.names(df2))
df2$id<-factor(x=words,row.names(df2)[order(df2[,6],decreasing=TRUE)])
df2<-melt(df2,"id",ordered = TRUE)
p<-ggplot(df2)+geom_tile(aes(x=id,y=variable,fill=value),colour = "white")
p<-p+theme_minimal()
p<-p+ggtitle("SOTU Word Frequency from 2009 to 2014 \n(it covers only words whose sum of term frequency from 2009 to 2014 > 40)")
p<-p+coord_flip()
p<-p+theme(plot.title = element_text(size=24),
axis.text.x = element_text(size=17),
axis.text.y = element_text(size=17),
axis.title.x =element_blank(),
axis.title.y =element_blank())
palette <- c("#f1eef6", "#d7b5d8", "#df65b0" ,"#ce1256")
p <- p + scale_fill_gradientn(colours = palette, values = c(0, 0.3, 0.6, 1))
p
df2<-speech_data[apply(speech_data,1,sum) >40,]
words<-as.character(row.names(df2))
df2$id<-factor(x=words,row.names(df2)[order(df2[,6],decreasing=FALSE)])
df2<-melt(df2,"id",ordered = TRUE)
#Create plot
p<-ggplot(df2)+geom_tile(aes(x=id,y=variable,fill=value),colour = "white")
p<-p+theme_minimal()
p<-p+ggtitle("SOTU Word Frequency from 2009 to 2014 \n(it covers only words whose sum of term frequency from 2009 to 2014 > 40)")
p<-p+coord_flip()
p<-p+theme(plot.title = element_text(size=24),
axis.text.x = element_text(size=17),
axis.text.y = element_text(size=17),
axis.title.x =element_blank(),
axis.title.y =element_blank())
palette <- c("#f1eef6", "#d7b5d8", "#df65b0" ,"#ce1256")
p <- p + scale_fill_gradientn(colours = palette, values = c(0, 0.3, 0.6, 1))
p
p<-p+theme(legend.position = "none")
p
print(p)
compcloud<-comparison.cloud(mat2,colors = brewer.pal(6,"Dark2"),max.words=max_words,random.order=FALSE)
compcloud
p<-ggplot(df2)+geom_tile(aes(x=id,y=variable,fill=value),colour = "white")
p<-p+theme_minimal()
p<-p+ggtitle("SOTU Word Frequency from 2009 to 2014 \n(it covers only words whose sum of term frequency from 2009 to 2014 > 40)")
p<-p+coord_flip()
p<-p+theme(plot.title = element_text(size=24),
axis.text.x = element_text(size=17),
axis.text.y = element_text(size=17),
axis.title.x =element_blank(),
axis.title.y =element_blank())
p<-p+theme(legend.position = "none")
p<-p+coord_fixed(ratio = 4/6)
palette <- c("#f1eef6", "#d7b5d8", "#df65b0" ,"#ce1256")
p <- p + scale_fill_gradientn(colours = palette, values = c(0, 0.3, 0.6, 1))
print(p)
p<-ggplot(df2)+geom_tile(aes(x=id,y=variable,fill=value),colour = "white")
p<-p+theme_minimal()
p<-p+ggtitle("SOTU Word Frequency from 2009 to 2014 \n(it covers only words whose sum of term frequency from 2009 to 2014 > 40)")
p<-p+coord_flip()
p<-p+theme(plot.title = element_text(size=24),
axis.text.x = element_text(size=17),
axis.text.y = element_text(size=17),
axis.title.x =element_blank(),
axis.title.y =element_blank())
p<-p+theme(legend.position = "none")
p<-p+coord_fixed(ratio = 5/6)
palette <- c("#f1eef6", "#d7b5d8", "#df65b0" ,"#ce1256")
p <- p + scale_fill_gradientn(colours = palette, values = c(0, 0.3, 0.6, 1))
print(p)
p<-ggplot(df2)+geom_tile(aes(x=id,y=variable,fill=value),colour = "white")
p<-p+theme_minimal()
p<-p+ggtitle("SOTU Word Frequency from 2009 to 2014 \n(it covers only words whose sum of term frequency from 2009 to 2014 > 40)")
p<-p+coord_flip()
p<-p+theme(plot.title = element_text(size=24),
axis.text.x = element_text(size=17),
axis.text.y = element_text(size=17),
axis.title.x =element_blank(),
axis.title.y =element_blank())
p<-p+theme(legend.position = "none")
p<-p+coord_fixed(ratio = 12/6)
palette <- c("#f1eef6", "#d7b5d8", "#df65b0" ,"#ce1256")
p <- p + scale_fill_gradientn(colours = palette, values = c(0, 0.3, 0.6, 1))
print(p)
p<-ggplot(df2)+geom_tile(aes(x=id,y=variable,fill=value),colour = "white")
p<-p+theme_minimal()
p<-p+ggtitle("SOTU Word Frequency from 2009 to 2014 \n(it covers only words whose sum of term frequency from 2009 to 2014 > 40)")
p<-p+coord_flip()
p<-p+theme(plot.title = element_text(size=24),
axis.text.x = element_text(size=17),
axis.text.y = element_text(size=17),
axis.title.x =element_blank(),
axis.title.y =element_blank())
p<-p+theme(legend.position = "none")
palette <- c("#f1eef6", "#d7b5d8", "#df65b0" ,"#ce1256")
p <- p + scale_fill_gradientn(colours = palette, values = c(0, 0.3, 0.6, 1))
print(p)
ggsave(file = "heatmap.png", plot = p, dpi = 100, width = 6.4, height = 4.8)
ggsave(file = "heatmap.png", plot = p, dpi = 100, width = 106.4, height = 104.8)
ggsave(file = "heatmap.png", plot = p, dpi = 100, width = 30.4, height = 30.4)
ggsave(file = "heatmap.png", plot = p, dpi = 100, width = 10.4, height = 10.4)
ggsave(file = "heatmap.png", plot = p, dpi = 100, width = 14.4, height = 10.4)
ggsave(file = "freqplot.png", plot = g, dpi = 100, width = 14.4, height = 10.4)
speech_data<-as.data.frame((inspect(text_mat)))
speech_data<-as.data.frame(t(speech_data))
colnames(speech_data)<-c("YEAR2009","YEAR2010","YEAR2011","YEAR2012","YEAR2013","YEAR2014")
# Filter the words sum of TF is greater than 50 and less than 100
df<-speech_data[apply(speech_data,1,sum) >50,]
#Frequency Plot YEAR2009 vs 2014
g<-ggplot(df)+geom_text(aes(x=YEAR2009,
y=YEAR2014,
label=row.names(df)),
size=7,
position = position_jitter(width = 2,height = 2))
g<-g+geom_abline(intercept=0,slope=1,colour="red")
g<-g+annotate("text",x=2,y=1, label = "X=Y",size=8, color="red")+labs(title="Freqency Plot 2009 vs 2014")
g<-g+theme(panel.grid.minor = element_blank())+
scale_x_continuous(expand = c(0, 0))+
scale_y_continuous(expand = c(0, 0))+
coord_fixed(ratio = 4/6, xlim = c(0, 35),ylim = c(0, 35))+
theme(plot.title = element_text(size=24),
axis.title.x = element_text(size=20),
axis.title.y = element_text(size=20),
axis.text.y=element_text(size=18),
axis.text.x=element_text(size=18))
print(g)
ggsave(file = "freqplot.png", plot = g, dpi = 100, width = 14.4, height = 10.4)
library(devtools)
source_url("https://raw.githubusercontent.com/yosukekatada/msan622/master/homework4/HW4.R")
